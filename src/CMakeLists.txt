# Specify the version being used
cmake_minimum_required(VERSION 2.6)
# Project name
project(se800)

# Library imports
include(FindProtobuf)
find_package(Protobuf REQUIRED)
find_package(Threads)
find_package( OpenThreads )
find_package( osg )
find_package( osgDB )
find_package( osgGA )
find_package( osgUtil )
find_package( osgViewer )
include_directories(${PROTOBUF_INCLUDE_DIR})

# Setting CFLAGS and LIBS
add_definitions(-std=c++11)
add_definitions(-g)
add_definitions(-pthread)
add_definitions(-lm)
add_definitions(-Wall)
add_definitions(-Werror)

# Self-defined library imports
add_library(common_engine engines/common/engine.cc)
add_library(graphics_engine engines/graphics/graphics.cc)
add_library(physics_engine engines/physics/physics.cc)
add_library(netpacket networks/netpacket.cc)
add_library(packetproto networks/packetprotos.pb.cc)
add_library(projectile engines/physics/projectile.cc)
add_library(ship classes/ship.cc)
add_library(control classes/control.cc)
add_library(client networks/client.cc)
add_library(server networks/server.cc)
add_library(world engines/world/world.cc)
add_library(scheduling engines/scheduling/scheduling.cc)
add_library(calendar engines/scheduling/calendar.cc)

macro( config_project PROJNAME LIBNAME )
  include_directories( ${${LIBNAME}_INCLUDE_DIR} )
  target_link_libraries( ${PROJNAME} ${${LIBNAME}_LIBRARY} )
endmacro()

# Link libraries to executable
add_executable(se800 main.cc)
target_link_libraries(se800 scheduling)
target_link_libraries(se800 calendar)
target_link_libraries(se800 graphics_engine)
target_link_libraries(se800 physics_engine)
target_link_libraries(se800 server)
target_link_libraries(se800 netpacket)
target_link_libraries(se800 packetproto)
target_link_libraries(se800 control)
target_link_libraries(se800 client)
target_link_libraries(se800 common_engine)
target_link_libraries(se800 ship)
target_link_libraries(se800 projectile)
target_link_libraries(se800 world)
target_link_libraries(se800 ${CMAKE_THREAD_LIBS_INIT})

config_project( se800 OPENTHREADS )
config_project( se800 OSG )
config_project( se800 OSGDB )
config_project( se800 OSGGA )
config_project( se800 OSGUTIL )
config_project( se800 OSGVIEWER )
target_link_libraries(se800 ${PROTOBUF_LIBRARY})

install(TARGETS se800 DESTINATION bin)
